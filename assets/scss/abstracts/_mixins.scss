@mixin responsive($breakpoint) {
    @media only screen and (max-width: $breakpoint) {
        @content;
    }
}

@mixin hover_link($lineHeight, $bgColor) {
    position: relative;

    &:after {
        content: "";
        height: $lineHeight;
        background-color: $bgColor;
        -webkit-transition: width .5s;
        -o-transition: width .5s;
        transition: width .5s;
        display: block;
        width: 0;
        position: absolute;
        bottom: 0;
    }

    &:hover {
        &:after {
            width: 100%;
        }
    }
}

@mixin flexbox($justify-content: inherit, $align-items: center, $flex-wrap: inherit, $flex-direction: inherit, $gap: 0) {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: $justify-content;
    -ms-flex-pack: $justify-content;
    justify-content: $justify-content;
    -webkit-box-align: $align-items;
    -ms-flex-align: $align-items;
    align-items: $align-items;
    flex-wrap: $flex-wrap;
    -ms-flex-wrap: $flex-wrap;
    -webkit-box-direction: normal;
    -ms-flex-direction: $flex-direction;
    flex-direction: $flex-direction;
    gap: $gap;
    @if $flex-direction == row {
        -webkit-box-orient: horizontal;
    } @else {
        -webkit-box-orient: vertical;
    }
    @if $justify-content == space-between {
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
    } @else if $justify-content == space-around {
        -ms-flex-pack: distribute;
    }

    @content;
}

@mixin grid($grid-template-columns: none, $gap: inherit, $row-gap: inherit) {
    display: grid;
    grid-template-columns: $grid-template-columns;
    gap: $gap;
    row-gap: $row-gap;

    @content;
}